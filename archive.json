{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2023-08-08T00:50:37.467309+00:00",
  "repo": "wbl/draft-ladd-bbs-privacypass",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 1,
      "id": "I_kwDOKDNA-c5tqKpp",
      "title": "Authenticator length",
      "url": "https://github.com/wbl/draft-ladd-bbs-privacypass/issues/1",
      "state": "OPEN",
      "author": "BasileiosKal",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "A Token has an authenticator of constant length (Nk). For BBS, the authenticator is a proof generated by [ProofGen](https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-bbs-signatures-03#name-proof-generation-proofgen). The proof's size depends on the number of disclosed attributes.\r\n\r\nHow can this be defined?? \r\n- Define Nk to be N/A in the IANA registry and the authenticator to be something like `uint8_t authenticator<0..2^32>`?? \r\n- Remove the authenticator and add a proof field?? \r\n- Define a constant number of selectively disclosable items, like `[sid, iat, nonce]`?? Or not use attributes at all??",
      "createdAt": "2023-08-07T15:52:44Z",
      "updatedAt": "2023-08-07T16:17:58Z",
      "closedAt": null,
      "comments": [
        {
          "author": "wbl",
          "authorAssociation": "OWNER",
          "body": "Where does this get defined? It's not the in the architecture draft which is the main thing I looked at when writing our text.",
          "createdAt": "2023-08-07T16:01:21Z",
          "updatedAt": "2023-08-07T16:01:21Z"
        },
        {
          "author": "BasileiosKal",
          "authorAssociation": "COLLABORATOR",
          "body": "Yes sorry! I was going of the [HTTP Authentication](https://www.ietf.org/archive/id/draft-ietf-privacypass-auth-scheme-11.html#name-token-redemption) and [Issuance Protocol](https://www.ietf.org/archive/id/draft-ietf-privacypass-protocol-11.html#name-issuance-protocol-for-publi) documents (was trying out the http protocol).",
          "createdAt": "2023-08-07T16:17:58Z",
          "updatedAt": "2023-08-07T16:17:58Z"
        }
      ]
    },
    {
      "number": 3,
      "id": "I_kwDOKDNA-c5tqPIX",
      "title": "Challenge use",
      "url": "https://github.com/wbl/draft-ladd-bbs-privacypass/issues/3",
      "state": "OPEN",
      "author": "BasileiosKal",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "My guess is that the Client can't just send the challenge to the Issuer?? If yes, there is nothing binding a specific challenge to the BBS signature. As a result, the Origin can't \"force\" the Client to get a \"fresh\" token.\r\n\r\nSome options that come to mind:\r\n-  Use public metadata with a low-accuracy expiration or issuance date?? (like in PR #2).\r\n-  Use [blind BBS signatures](https://identity.foundation/bbs-signature/draft-blind-bbs-signatures.html), where the Client \"commits\" to the challenge during issuance (similar to how blind RSA works).\r\n\r\nThe blind BBS signatures document is out of date rn. If it's updated, should it be used instead of the core BBS protocol??",
      "createdAt": "2023-08-07T16:04:05Z",
      "updatedAt": "2023-08-07T16:34:05Z",
      "closedAt": null,
      "comments": [
        {
          "author": "wbl",
          "authorAssociation": "OWNER",
          "body": "Yeah this is not for the usual privacypass semantics where you want a token that gets spent. I want to keep things simple for now: this is just to illustrate to the WG how BBS would fit in. If they decide it's useful with some bells and whistles we'll put them in.",
          "createdAt": "2023-08-07T16:34:05Z",
          "updatedAt": "2023-08-07T16:34:05Z"
        }
      ]
    }
  ],
  "pulls": [
    {
      "number": 2,
      "id": "PR_kwDOKDNA-c5XWjyu",
      "title": "HTTP based protocol",
      "url": "https://github.com/wbl/draft-ladd-bbs-privacypass/pull/2",
      "state": "OPEN",
      "author": "BasileiosKal",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "First stamp in an HTTP based Issuance and redemption protocol.\r\n\r\nUsing public metadata to provide the Origin with a way to check the token's \"freshness\".\r\n\r\nNot sure if this document is the correct place for this?? Would be interested in peoples thoughts regardless! It could help with some decisions later (like #1).",
      "createdAt": "2023-08-07T15:57:35Z",
      "updatedAt": "2023-08-07T16:00:09Z",
      "baseRepository": "wbl/draft-ladd-bbs-privacypass",
      "baseRefName": "main",
      "baseRefOid": "1aaeb25a45083e46a2aa7f8548ce2cf2ab6fd8ba",
      "headRepository": "wbl/draft-ladd-bbs-privacypass",
      "headRefName": "vasilis/protocol",
      "headRefOid": "09f4ff33c426e122cef61bf55491d1d6bdb63b18",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    }
  ]
}